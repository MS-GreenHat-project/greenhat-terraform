# ArgoCD Helm Chart Values
# Based on current installation configuration

global:
  # Use LoadBalancer for external access (matching current setup)
  service:
    type: LoadBalancer

# Server configuration
server:
  service:
    type: LoadBalancer
    # This will create a LoadBalancer service like the current setup
    annotations: {}
    
  # Enable insecure mode for HTTP access (can be changed to secure later)
  extraArgs:
    - --insecure

  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Redis HA configuration (matching current setup)
redis-ha:
  enabled: true
  
  # Redis HA configuration
  haproxy:
    enabled: true
    replicas: 3
    
  redis:
    config:
      save: "900 1"
    
  # Resource configuration for Redis
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Controller configuration
controller:
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Repository server configuration
repoServer:
  replicas: 2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Application Set Controller
applicationSet:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Notifications controller
notifications:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Dex server for authentication
dex:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Configuration for ArgoCD
configs:
  # ArgoCD configuration
  cm:
    # Resource exclusions (matching current setup)
    resource.exclusions: |
      ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter
      - apiGroups:
        - ''
        - discovery.k8s.io
        kinds:
        - Endpoints
        - EndpointSlice
      ### Internal Kubernetes resources excluded reduce the number of watched events
      - apiGroups:
        - coordination.k8s.io
        kinds:
        - Lease
      ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events
      - apiGroups:
        - authentication.k8s.io
        - authorization.k8s.io
        kinds:
        - SelfSubjectReview
        - TokenReview
        - LocalSubjectAccessReview
        - SelfSubjectAccessReview
        - SelfSubjectRulesReview
        - SubjectAccessReview
      ### Intermediate Certificate Request excluded reduce the number of watched events
      - apiGroups:
        - certificates.k8s.io
        kinds:
        - CertificateSigningRequest
      - apiGroups:
        - cert-manager.io
        kinds:
        - CertificateRequest

    # Resource customizations for ignoring updates
    resource.customizations.ignoreResourceUpdates.all: |
      jsonPointers:
        - /status
    
    resource.customizations.ignoreResourceUpdates.ConfigMap: |
      jqPathExpressions:
        # Ignore the cluster-autoscaler status
        - '.metadata.annotations."cluster-autoscaler.kubernetes.io/last-updated"'
        # Ignore the annotation of the legacy Leases election
        - '.metadata.annotations."control-plane.alpha.kubernetes.io/leader"'

  # Command line parameters
  params:
    redis.server: argocd-redis-ha-haproxy:6379
